version: '3.8'

services:
  # === DATABASE LAYER ===
  postgres:
    image: postgres:16-alpine
    container_name: semantic-doc-finder-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-semanticuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-semantic2024}
      POSTGRES_DB: ${POSTGRES_DB:-semantic_doc_finder}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${POSTGRES_DATA_PATH:-./postgresql_data}:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - semantic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-semanticuser} -d ${POSTGRES_DB:-semantic_doc_finder}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    container_name: semantic-doc-finder-qdrant
    ports:
      - "${QDRANT_PORT:-6333}:6333"
    volumes:
      - ${QDRANT_DATA_PATH:-./qdrant_data}:/qdrant/storage
    networks:
      - semantic_network
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    restart: unless-stopped

  # === LLM LAYER ===
  ollama:
    image: ollama/ollama:latest
    container_name: semantic-doc-finder-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    environment:
      OLLAMA_KEEP_ALIVE: 24h
      OLLAMA_HOST: 0.0.0.0
      OLLAMA_MAX_LOADED_MODELS: 3
      OLLAMA_NUM_PARALLEL: 2
    volumes:
      - ${OLLAMA_DATA_PATH:-./ollama_data}:/root/.ollama
    networks:
      - semantic_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped

  # === PROCESSING LAYER ===
  ocr_agent:
    build:
      context: .
      dockerfile: agents/ocr/Dockerfile.v2
    container_name: semantic-doc-finder-ocr
    volumes:
      - ${DOCUMENTS_PATH:-./data}:/data:ro
      - ${LOGS_PATH:-./logs}:/app/logs
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-semanticuser}:${POSTGRES_PASSWORD:-semantic2024}@postgres:5432/${POSTGRES_DB:-semantic_doc_finder}
      TESSERACT_LANG: ${TESSERACT_LANG:-deu+eng}
      CHUNK_SIZE: ${CHUNK_SIZE:-1000}
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - semantic_network
    restart: unless-stopped

  search_api:
    build:
      context: .
      dockerfile: services/search/Dockerfile.v2
    container_name: semantic-doc-finder-search-api
    ports:
      - "${SEARCH_API_PORT:-8001}:8001"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-semanticuser}:${POSTGRES_PASSWORD:-semantic2024}@postgres:5432/${POSTGRES_DB:-semantic_doc_finder}
      QDRANT_URL: http://qdrant:6333
      OLLAMA_URL: http://ollama:11434
      DEFAULT_MODEL: ${DEFAULT_MODEL:-mistral}
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      ollama:
        condition: service_started
    networks:
      - semantic_network
    restart: unless-stopped

  # === WORKFLOW LAYER ===
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: semantic-doc-finder-n8n
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB:-semantic_doc_finder}
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-semanticuser}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD:-semantic2024}
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD:-semantic2024}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-semantic-doc-finder-key-2024}
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:${N8N_PORT:-5678}/
      GENERIC_TIMEZONE: ${TZ:-Europe/Berlin}
      OLLAMA_URL: http://ollama:11434
      DEFAULT_MODEL: ${DEFAULT_MODEL:-mistral}
    volumes:
      - ${N8N_DATA_PATH:-./n8n_data}:/home/node/.n8n
      - ./n8n/workflows:/workflows
      - ${DOCUMENTS_PATH:-./data}:/data
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - semantic_network
    restart: unless-stopped

networks:
  semantic_network:
    driver: bridge
