services:
  redis:
    image: redis:7-alpine
    container_name: doc-intel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - doc_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: doc-intel-postgres
    environment:
      POSTGRES_USER: docintell
      POSTGRES_PASSWORD: docintell123
      POSTGRES_DB: document_intelligence
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - doc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docintell -d document_intelligence"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  watchdog:
    build:
      context: .
      dockerfile: agents/watchdog/Dockerfile
    container_name: doc-intel-watchdog
    volumes:
      - ./data:/data:ro
      - ./logs:/app/logs
    environment:
      WATCH_PATHS: /data
      REDIS_URL: redis://redis:6379
      PYTHONPATH: /app
      LOG_PATH: /app/logs
      PYTHONUNBUFFERED: 1
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - doc_network
    restart: unless-stopped

  ocr_agent:
    build:
      context: .
      dockerfile: agents/ocr/Dockerfile
    container_name: doc-intel-ocr
    volumes:
      - ./data:/data:ro
      - ./indices:/indices
      - ./logs:/app/logs
    environment:
      REDIS_URL: redis://redis:6379
      TESSERACT_LANG: deu+eng
      PYTHONPATH: /app
      LOG_PATH: /app/logs
      ENABLE_PII_REMOVAL: "true"
      PYTHONUNBUFFERED: 1
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - doc_network
    restart: unless-stopped

  indexer:
    build:
      context: .
      dockerfile: agents/indexer/Dockerfile
    container_name: doc-intel-indexer
    volumes:
      - ./data:/data:ro
      - ./indices:/indices
      - ./logs:/app/logs
    environment:
      REDIS_URL: redis://redis:6379
      INDEX_FORMAT: markdown_json
      PII_REMOVAL: strict
      LANGUAGE: de
      PYTHONPATH: /app
      LOG_PATH: /app/logs
      INDEX_PATH: /indices
      PYTHONUNBUFFERED: 1
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - doc_network
    restart: unless-stopped

  search_api:
    build:
      context: .
      dockerfile: services/search/Dockerfile
    container_name: doc-intel-search-api
    ports:
      - "8001:8001"
    volumes:
      - ./indices:/indices:ro
      - ./logs:/app/logs
    environment:
      REDIS_URL: redis://redis:6379
      OLLAMA_URL: http://ollama:11434
      PYTHONPATH: /app
      LOG_PATH: /app/logs
      INDEX_PATH: /indices
      CORS_ALLOW_ORIGIN: http://localhost:8080,http://localhost:5678
      USER_AGENT: DocumentIntelligenceSystem/1.0
      PYTHONUNBUFFERED: 1
    depends_on:
      redis:
        condition: service_healthy
      indexer:
        condition: service_started
    networks:
      - doc_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: doc-intel-n8n
    ports:
      - "5678:5678"
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: document_intelligence
      DB_POSTGRESDB_USER: docintell
      DB_POSTGRESDB_PASSWORD: docintell123
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: changeme
      N8N_ENCRYPTION_KEY: n8n-encryption-key
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      N8N_HOST=localhost
      WEBHOOK_URL=http://localhost:5678/
      GENERIC_TIMEZONE: Europe/Berlin
      N8N_RUNNERS_ENABLED: "true"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/workflows
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - doc_network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: doc-intel-ollama
    ports:
      - "11434:11434"
    runtime: nvidia
    environment:
      OLLAMA_KEEP_ALIVE: 24h
      OLLAMA_HOST: 0.0.0.0
      OLLAMA_DEBUG: INFO
      OLLAMA_GPU_OVERHEAD: 0
      OLLAMA_LLM_LIBRARY: cublas
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - doc_network
    restart: unless-stopped

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: doc-intel-webui
    ports:
      - "8080:8080"
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      WEBUI_SECRET_KEY: secret-key-change-me
      WEBUI_AUTH: "false"
      ENABLE_SIGNUP: "true"
      DEFAULT_MODELS: mistral,llama3,phi
    volumes:
      - open_webui_data:/app/backend/data
    depends_on:
      ollama:
        condition: service_started
    networks:
      - doc_network
    restart: unless-stopped

networks:
  doc_network:
    driver: bridge

volumes:
  redis_data:
  n8n_data:
  ollama_data:
  open_webui_data:
  postgres_data:

